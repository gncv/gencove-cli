name: Release Gencove CLI

on:
  push:
    branches:
      - "hotfix/*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-15, windows-latest]
        python: [3.12]
        include:
          - os: ubuntu-latest
            artifact_name: gencove
            slash: "/"
            path_separator: ":"
            cache_location: ~/.cache/pip
          - os: macos-15
            artifact_name: gencove
            slash: "/"
            path_separator: ":"
            cache_location: ~/Library/Caches/pip
          - os: windows-latest
            artifact_name: gencove.exe
            slash: "\\"
            path_separator: ";"
            cache_location: ~\AppData\Local\pip\Cache
      fail-fast: true
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          allow-prereleases: true
      - name: Cache pip modules
        uses: actions/cache@v4
        with:
          path: ${{ matrix.cache_location }}
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Package app
        run: |
          pip install .
          pyinstaller gencove${{ matrix.slash }}cli.py --name gencove --onefile --add-data="gencove/version${{ matrix.path_separator }}gencove/version" --hidden-import="pkg_resources.py2_warn" --hidden-import="configparser"
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: gencove-${{ runner.os }}
          path: dist${{ matrix.slash }}${{ matrix.artifact_name }}

  make_release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: gencove-Linux
          path: gencove-Linux

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: gencove-macOS
          path: gencove-macOS

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: gencove-Windows
          path: gencove-Windows

      - name: Zip release
        run: |
            chmod -R +x .
            zip --junk-paths gencove-Linux gencove-Linux/gencove
            zip --junk-paths gencove-macOS gencove-macOS/gencove
            zip --junk-paths gencove-Windows gencove-Windows/gencove.exe

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        # if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: true
          prerelease: true
          files: |
            gencove-Linux.zip
            gencove-macOS.zip
            gencove-Windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
