stages:
  - test
  - deploy

before_script:
  - apt-get update -qy
  - apt-get install -y python-dev python-pip python3 python3-dev python3-pip
  # Install dev requirements
  - pip install -r requirements.txt
  # Setup package and it's requirements
  - pip install -e .
  # Generate documentation
  - cd docs && make html && cd ..

python2:
  image: python:2.7
  stage: test
  script: tox -e py27

python37:
  image: python:3.7
  stage: test
  script: tox -e py37

black:
  image: python:3.7
  stage: test
  script: tox -e black

flake8:
  image: python:3.7
  stage: test
  script: tox -e flake8

pylint:
  image: python:3.7
  stage: test
  script: tox -e pylint

bandit:
  image: python:3.7
  stage: test
  script: tox -e bandit

staging:
  stage: deploy
  script:
    # Install twine for uploading to pypi
    - pip install twine
    # Upload docs
    - aws s3 sync docs/_build/html/ s3://$BUCKET_STAGING/api/python/ --delete --region us-east-1
    # Enable the aws cloudfront command
    - aws configure set preview.cloudfront true
    # Clear web cache
    - aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_STAGING --paths "/*"
    # Upload to pypi
    - python setup.py sdist
    - python setup.py bdist_wheel --universal
    - twine upload dist/*
  only:
    - master
  
production:
  stage: deploy
  script:
    # Install twine for uploading to pypi
    - pip install twine
    # Upload docs
    - aws s3 sync docs/_build/html/ s3://$BUCKET_PRODUCTION/api/python/ --delete --region us-east-1
    # Enable the aws cloudfront command
    - aws configure set preview.cloudfront true
    # Clear web cache
    - aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_PRODUCTION --paths "/*"
    # Upload to pypi
    - python setup.py sdist
    - python setup.py bdist_wheel --universal
    - twine upload dist/*
  only:
    # - tags
    #
    # SemVer-compliant tags (with no metadata)
    - /^v?\d+\.\d+\.\d+$/
