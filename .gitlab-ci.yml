image: ghcr.io/astral-sh/uv:python3.10-bookworm-slim  # >3.10 causes failures

stages:
  - test
  - build
  - deploy

before_script:
  - export PATH="/usr/local/bin:$PATH"
  - uv sync --extra dev --extra test

variables:
    UV_LINK_MODE: copy

test_windows:
  stage: test
  tags:
    - saas-windows-medium-amd64
  variables:
    PYTHON_VERSION_MAJOR: "3"
    PYTHON_VERSION_MINOR: "10"
    PYTHON_VERSION_PATCH: "11"
  before_script:
    - powershell -Command "irm https://astral.sh/uv/install.ps1 | iex"
    - powershell -Command "C:\Users\gitlab_runner\.local\bin\uv.exe python install $env:PYTHON_VERSION_MAJOR.$env:PYTHON_VERSION_MINOR.$env:PYTHON_VERSION_PATCH"
    - powershell -Command "C:\Users\gitlab_runner\.local\bin\uv.exe sync --extra dev --extra test"
    - powershell -Command "New-Item -ItemType File -Path 'gencove/tests/.env' -Force"
  script:
    - powershell -Command "C:\Users\gitlab_runner\.local\bin\uv.exe run gencove --version"


python39_api_key:
  image: ghcr.io/astral-sh/uv:python3.9-bookworm-slim
  stage: test
  script: uv run tox -e py39-api_key
  except:
    - tags

python39_user_pass:
  image: ghcr.io/astral-sh/uv:python3.9-bookworm-slim
  stage: test
  script: uv run tox -e py39-user_pass
  except:
    - tags

python310_api_key:
  image: ghcr.io/astral-sh/uv:python3.10-bookworm-slim
  stage: test
  script: uv run tox -e py310-api_key
  except:
    - tags

python310_user_pass:
  image: ghcr.io/astral-sh/uv:python3.10-bookworm-slim
  stage: test
  script: uv run tox -e py310-user_pass
  except:
    - tags

python311_api_key:
  image: ghcr.io/astral-sh/uv:python3.11-bookworm-slim
  stage: test
  script: uv run tox -e py311-api_key
  except:
    - tags

python311_user_pass:
  image: ghcr.io/astral-sh/uv:python3.11-bookworm-slim
  stage: test
  script: uv run tox -e py311-user_pass
  except:
    - tags

python312_api_key:
  image: ghcr.io/astral-sh/uv:python3.12-bookworm-slim
  stage: test
  script: uv run tox -e py312-api_key
  except:
    - tags

python312_user_pass:
  image: ghcr.io/astral-sh/uv:python3.12-bookworm-slim
  stage: test
  script: uv run tox -e py312-user_pass
  except:
    - tags

python313_api_key:
  image: ghcr.io/astral-sh/uv:python3.13-bookworm-slim
  stage: test
  script: uv run tox -e py313-api_key
  except:
    - tags

python313_user_pass:
  image: ghcr.io/astral-sh/uv:python3.13-bookworm-slim
  stage: test
  script: uv run tox -e py313-user_pass
  except:
    - tags

black:
  stage: test
  script: uv run tox -e black_checker
  except:
    - tags

flake8:
  stage: test
  script: uv run tox -e flake8
  except:
    - tags

pylint:
  stage: test
  script: uv run tox -e pylint
  except:
    - tags

bandit:
  stage: test
  script: uv run tox -e bandit
  except:
    - tags

build_docs_stage:
  stage: deploy
  trigger:
    project: gencove/docs-main
    branch: master
  only:
    - master

build_docs_prod:
  stage: deploy
  trigger:
    project: gencove/docs-main
    branch: production
  only:
    - prod

production:
  stage: deploy
  id_tokens:
    PYPI_ID_TOKEN:
      aud: pypi
  script:
    - uv build
    - uv publish
    # Autotag
    - apt-get update -y && apt-get install -y git
    - git config user.email "${GITLAB_USER_EMAIL}"
    - git config user.name "${GITLAB_USER_NAME}"
    - git remote add api-origin https://gencove-deploy-bot:${GITLAB_ACCESS_TOKEN}@gitlab.com/${CI_PROJECT_PATH}
    - export CURRENT_VERSION="$(./version-01-upgrade.sh print | tail -1)"
    - git tag -a "$CURRENT_VERSION" -m "Auto-Release"
    - git push api-origin "$CURRENT_VERSION"
  only:
    # - tags
    #
    # SemVer-compliant tags (with no metadata)
    # - /^v?\d+\.\d+\.\d+$/
    - prod
