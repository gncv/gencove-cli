image: python:3.7

stages:
  - test
  - build
  - deploy

before_script:
  - apt-get update -qy
  - apt-get install -y python3 python3-dev python3-pip
  - pip install --upgrade 'setuptools<45'
  # Install dev requirements
  - pip install -r requirements.txt
  # Setup package and it's requirements
  - pip install -e .


python37_api_key:
  stage: test
  script: tox -e py37-api_key
  except:
    - tags

python37_user_pass:
  stage: test
  script: tox -e py37-user_pass
  except:
    - tags
  coverage: /^TOTAL.+?(\d+\.\d+\%)$/

python38_api_key:
  image: python:3.8
  stage: test
  script: tox -e py38-api_key
  except:
    - tags

python38_user_pass:
  image: python:3.8
  stage: test
  script: tox -e py38-user_pass
  except:
    - tags

python39_api_key:
  image: python:3.9
  stage: test
  script: tox -e py39-api_key
  except:
    - tags

python39_user_pass:
  image: python:3.9
  stage: test
  script: tox -e py39-user_pass
  except:
    - tags

python310_api_key:
  image: python:3.10
  stage: test
  script: tox -e py310-api_key
  except:
    - tags

python310_user_pass:
  image: python:3.10
  stage: test
  script: tox -e py310-user_pass
  except:
    - tags


python311_api_key:
  image: python:3.11
  stage: test
  script: tox -e py311-api_key
  except:
    - tags

python311_user_pass:
  image: python:3.11
  stage: test
  script: tox -e py311-user_pass
  except:
    - tags

black:
  stage: test
  script: tox -e black_checker
  except:
    - tags

flake8:
  stage: test
  script: tox -e flake8
  except:
    - tags

pylint:
  stage: test
  script: tox -e pylint
  except:
    - tags

bandit:
  stage: test
  script: tox -e bandit
  except:
    - tags

docs:
  image: python:3.10
  stage: build
  script: cd docs && make html
  artifacts:
    paths:
      - docs/
  except:
    - tags

staging:
  stage: deploy
  dependencies:
    - docs
  script:
    # Install AWS CLI
    - pip install awscli
    # # Install twine for uploading to pypi
    # - pip install twine
    # Upload docs
    - aws s3 sync docs/build/html/ s3://$BUCKET_STAGING/cli/ --delete --region us-east-1
    # Enable the aws cloudfront command
    - aws configure set preview.cloudfront true
    # Clear web cache
    - aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_STAGING --paths "/*"
    # # Upload to pypi
    # - python setup.py sdist
    # - python setup.py bdist_wheel --universal
    # - twine upload dist/*
  only:
    - master

production:
  stage: deploy
  dependencies:
    - docs
  script:
    # Install AWS CLI
    - pip install awscli
    # Install twine for uploading to pypi
    - pip install twine
    # Upload docs
    - aws s3 sync docs/build/html/ s3://$BUCKET_PRODUCTION/cli/ --delete --region us-east-1
    # Enable the aws cloudfront command
    - aws configure set preview.cloudfront true
    # Clear web cache
    - aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_PRODUCTION --paths "/*"
    # Upload to pypi
    - python setup.py sdist
    - python setup.py bdist_wheel --universal
    - twine upload dist/*
    # Autotag
    - git config user.email "${GITLAB_USER_EMAIL}"
    - git config user.name "${GITLAB_USER_NAME}"
    - git remote add api-origin https://oauth2:${GITLAB_ACCESS_TOKEN}@gitlab.com/${CI_PROJECT_PATH}
    - export CURRENT_VERSION="$(./version-01-upgrade.sh print | tail -1)"
    - git tag -a "$CURRENT_VERSION" -m "Auto-Release"
    - git push api-origin "$CURRENT_VERSION"
  only:
    # - tags
    #
    # SemVer-compliant tags (with no metadata)
    # - /^v?\d+\.\d+\.\d+$/
    - prod
